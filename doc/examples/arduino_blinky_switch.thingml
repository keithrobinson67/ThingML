import "datatypes.thingml" from stl

thing fragment LedMessages {
	message ledon();
	message ledoff();
}

thing Switch includes LedMessages {
	
	property off_counter : Int16 = 1
	property on_counter : Int16 = 1
	property value : Int16 = 0
	
	provided port switch {
		sends ledon
		sends ledoff
	}
	
	function led_init() do value = (gpio 0, 9 setmode out) as Int16 end

	statechart init INIT {
		
		state INIT {
		    on entry led_init()
			transition -> ON action do switch!ledon() end
		}
		
		state ON {
			
			transition -> ON guard on_counter < 1000 action do
														on_counter = on_counter + 1
													  end
			transition -> OFF guard on_counter == 1000 action do
			                                            switch!ledoff()
														on_counter = 1
													  end
		}
		
		state OFF {
			
			transition -> OFF guard off_counter < 1000 action do
														off_counter = off_counter + 1
													  end
			transition -> ON guard off_counter == 1000 action do    
			                                            switch!ledon()                                      
														off_counter = 1
													  end
														
		}
	}
}

thing LED includes LedMessages {
	
	property value : Int16 = 0
	
	function led_on() 	do value = (gpio 0, 9 write 0) as Int16 end
	function led_off() 	do value = (gpio 0, 9 write 1) as Int16 end
	
	required port switch {
		receives ledon
		receives ledoff
	}

	statechart init RUN {
	
		
		state RUN {	
			transition -> RUN event e : switch?ledon action led_on()
		    transition -> RUN event e : switch?ledoff action led_off()
		}
	}
}

thing Blink {
	
	property value : Int16 = 0
	property off_counter : Int16 = 0
	property on_counter : Int16 = 0
	
	function led_init() do value = (gpio 0, 10 setmode out) as Int16 end
	function led_on() 	do value = (gpio 0, 10 write 0) as Int16 end
	function led_off() 	do value = (gpio 0, 10 write 1) as Int16 end

	statechart init ON {
		
		on entry led_init()
		
		state ON {
			on entry do	
				led_on()
			end
			
			transition -> ON guard on_counter < 500 action do
														on_counter = on_counter + 1
													  end
			transition -> OFF guard on_counter == 500 action do
														on_counter = 0
													  end
		}
		
		state OFF {
			on entry do 
				led_off()
			end
			
			
			transition -> OFF guard off_counter < 500 action do
														off_counter = off_counter + 1
													  end
			transition -> ON guard off_counter == 500 action do
														off_counter = 0
													  end
														
		}
	}
}

configuration BlinkySwitch8051
@compiler "8051"
{
	instance led: LED
	instance switch: Switch
	connector led.switch => switch.switch
}

configuration BlinkySwitchArduino
@compiler "arduino"
{
	instance led: LED
	instance switch: Switch
	instance blink: Blink
	connector led.switch => switch.switch
}
